managed implementation in class zbp_i_projt447 unique;
strict ( 2 );

define behavior for ZI_PROJT447 alias project447
persistent table zaproj447
lock master
authorization master ( global )
etag master LastChangedAt
{
  create;//cuando agrego en alguno de estos una feature para que cumpla cuando se hacen este tipo de acciones
  update ( features : instance ); //ver con codigo nuevo de prueba de clase
  delete;

  field ( readonly ) ProjectId, Status, CreatedBy, CreatedAt, LastChangedAt, LastChangedBy;
  field ( readonly, numbering : managed ) Id;
  field ( mandatory : create, readonly : update ) BeginDate, EndDate;
  field ( mandatory : create ) IsSensitive;

  //action
  action ( features : instance ) setStatusApprove result [1] $self;
  action ( features : instance ) setStatusDisapprove result [1] $self;

  //determination
  determination detProjectId on modify { create; }

  //validation
  validation valDate on save { field BeginDate, EndDate; }
  validation valIsSensitive on save { field IsSensitive; }



  mapping for zaproj447
    {
      Id            = id;
      ProjectId     = project_id;
      Description   = description;
      IsSensitive   = is_sensitive;
      Status        = status;
      BeginDate     = begin_date;
      EndDate       = end_date;
      CreatedBy     = created_by;
      CreatedAt     = created_at;
      LastChangedBy = last_changed_by;
      LastChangedAt = last_changed_at;
    }

}